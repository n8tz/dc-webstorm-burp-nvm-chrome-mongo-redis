version: '3'
volumes:
  node_modules:
  builds:
  emptyDockerDir:
#  nfsmountCC:
#    driver: local
#    driver_opts:
#      type: nfs
#      o: addr=10.90.239.72       # IP of nfs server.  This is also where you put any options '-o' in standard option format
#      device: ":/opt/compilers/"  # location on nfs server of file/dir you want to mount
networks:
  app_network:
services:  
  traefik:
    image: "traefik:2.0"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      #      - "--docker.domain=localhost"
      - "--entrypoints.proxy.address=:8080"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app_network
      
  workspace:
    #restart: always
    build:
      context: .
    shm_size: '2gb'
    working_dir: /home/workspace
    #    command: bash -c "npm i&&wi-run :dev start"
    #command: wstorm
    #
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.rule=Host(`${PROXY_DOMAIN:-burp.localhost}`)"
      - "traefik.http.routers.proxy.address=:8080"
      - "traefik.http.routers.proxy.entrypoints=proxy"
      - "traefik.http.routers.app.rule=Host(`${APP_DOMAIN:-app.localhost}`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.routers.proxy.address=:80"
      - 'traefik.protocol=http'
    environment:
      - node-options="--max-old-space-size=4096"
      - MONGO_URI=mongodb://mongodb:27017
      - REDIS_URI=redis://redis:6379
      - DISPLAY=${WORKSPACE:-192.168.150.24:0.0}
    #      - CHOKIDAR_USEPOLLING=true
    links:
      - mongodb
      - redis
    depends_on:
      - mongodb
      - redis
    volumes:
      - ${WORKSPACE:-..}:/home/workspace
      - node_modules:/home/workspace/node_modules
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#      - /tmp/.X11-unix:/tmp/.X11-unix
    expose:
      - "8080"
#    ports:
#      - "${APP_DOCKER_DEBUG_PORT:-9229}:9229"
    #      - "9090:9090"
    networks:
      - app_network  
  mongodb:
    image: mongo
    restart: always
    command: --quiet
    environment:
      - MONGO_DATA_DIR=/data/mongodb
    volumes:
      - ../../docker-data/mongodb:/data
    expose:
      - 27017
    #    ports:
    #      - "27017"
    networks:
      - app_network
  redis:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    restart: always
    expose:
      - 6379
    networks:
      - app_network
    volumes:
      - ../../docker-data/redis-data:/data